[{"C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\index.js":"1","C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\FullApp.js":"2","C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\LamminSuoPage.js":"3","C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\StartPage.js":"4","C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\BelorussianSwPage.js":"5","C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\MapMain.js":"6","C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\LamminSuoMap.js":"7","C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\Header.js":"8","C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\LeftPanel.js":"9","C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\SwampCards.js":"10","C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\data\\stations.js":"11","C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\data\\station_layers.js":"12","C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\TimeSeriesPaper.js":"13","C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\server_settings.js":"14","C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\LayersCheckbox.js":"15","C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\palette.js":"16","C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\data\\type_icons.js":"17","C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\data\\daily.js":"18","C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\TimeSeriesChart.js":"19","C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\DevelopingCard.js":"20","C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\AboutPage.js":"21","C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\ArchivePage.js":"22","C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\DocumentationPage.js":"23"},{"size":211,"mtime":1612210305279,"results":"24","hashOfConfig":"25"},{"size":1010,"mtime":1614076677270,"results":"26","hashOfConfig":"25"},{"size":1713,"mtime":1613940295643,"results":"27","hashOfConfig":"25"},{"size":1232,"mtime":1614074792267,"results":"28","hashOfConfig":"25"},{"size":283,"mtime":1614075287388,"results":"29","hashOfConfig":"25"},{"size":2289,"mtime":1612210305274,"results":"30","hashOfConfig":"25"},{"size":5345,"mtime":1613978513071,"results":"31","hashOfConfig":"25"},{"size":3842,"mtime":1614076717593,"results":"32","hashOfConfig":"25"},{"size":3345,"mtime":1612617003108,"results":"33","hashOfConfig":"25"},{"size":1686,"mtime":1614077025726,"results":"34","hashOfConfig":"25"},{"size":1862,"mtime":1612692257533,"results":"35","hashOfConfig":"25"},{"size":556,"mtime":1612588138970,"results":"36","hashOfConfig":"25"},{"size":5837,"mtime":1614073608879,"results":"37","hashOfConfig":"25"},{"size":142,"mtime":1611881112631,"results":"38","hashOfConfig":"25"},{"size":1012,"mtime":1612469022547,"results":"39","hashOfConfig":"25"},{"size":341,"mtime":1612469022550,"results":"40","hashOfConfig":"25"},{"size":639,"mtime":1612588138971,"results":"41","hashOfConfig":"25"},{"size":7523,"mtime":1613940295653,"results":"42","hashOfConfig":"25"},{"size":2172,"mtime":1614072510860,"results":"43","hashOfConfig":"25"},{"size":907,"mtime":1614076004795,"results":"44","hashOfConfig":"25"},{"size":275,"mtime":1614076127728,"results":"45","hashOfConfig":"25"},{"size":277,"mtime":1614076236000,"results":"46","hashOfConfig":"25"},{"size":283,"mtime":1614076626063,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1idgquo",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\index.js",[],["98","99"],"C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\FullApp.js",[],"C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\LamminSuoPage.js",["100","101"],"import React, {Component} from 'react';\r\n\r\n\r\nimport stations from './data/stations.js'\r\nimport station_layers from './data/station_layers.js'\r\n\r\nimport Header from './Header.js'\r\nimport LeftPanel from './LeftPanel.js'\r\nimport LamminSuoMap from './LamminSuoMap.js'\r\n\r\nexport default class LamminSuoPage extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\t\t\r\n\t\tthis.state = {\r\n\t\t\tlayers: null,\r\n\t\t\tlayers_parse: false,\r\n\t\t\tactive_layers: {},\r\n\t\t}\t\r\n\t}\r\n\t\r\n\tsetCheckedLayers=(type_name, value)=>{\r\n\t\tvar new_active_layers=this.state.active_layers\r\n\t\tnew_active_layers[type_name]=value\r\n\t\tthis.setState(() => {return {active_layers: new_active_layers}})\r\n\t}\r\n\r\n\tparseStationsByType=(stations, station_layers)=>{\r\n\t\tvar layersDict={}\r\n\t\tfor (var layer in station_layers){\r\n\t\t  layersDict[station_layers[layer].type_name]=[]\r\n\t\t  for (var feature in stations.features){\r\n\t\t\tif (station_layers[layer].type_name==stations.features[feature].properties.type){\r\n\t\t\t  stations.features[feature].properties['geometry']=stations.features[feature].geometry\r\n\t\t\t  layersDict[station_layers[layer].type_name].push(stations.features[feature].properties)\r\n\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t\tthis.setState(() => {return {layers: layersDict, layers_parse: true}})\r\n\t  }\r\n\r\n\trender(){\r\n\t\tdocument.title='Болото Ламмин-Суо'\r\n\t\tif (this.state.layers_parse==false){\r\n\t\t\tthis.parseStationsByType(stations, station_layers)\r\n\t\t}\r\n\t\treturn(\t\t\t\t\r\n\t\t\t<div className='body-scroll-hidden'>\r\n\t\t\t\t<Header/>\r\n\t\t\t\t<LamminSuoMap layers={this.state.layers} active_layers={this.state.active_layers}/>\r\n\t\t\t\t<LeftPanel layers={this.state.layers} setCheckedLayers={(type_name, value)=>this.setCheckedLayers(type_name, value)}/>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}","C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\StartPage.js",[],"C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\BelorussianSwPage.js",[],"C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\MapMain.js",[],"C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\LamminSuoMap.js",["102","103","104","105","106","107","108","109","110","111","112"],"import React, {Component} from 'react';\r\nimport { MapContainer, TileLayer, Marker, Tooltip, Popup} from 'react-leaflet';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport TimeSeriesPaper from './TimeSeriesPaper.js'\r\n\r\nimport station_layers from './data/station_layers.js'\r\n\r\nclass LamminSuoMap extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\t\r\n\t\tthis.state = {\r\n            papersList: [],\r\n            firstLoad: false,\r\n\t    }\r\n    }\r\n    \r\n    returnTimeSeriesPaper=()=>{\r\n        var el_list = this.state.papersList.map((el)=>{\r\n            if (el.value==true){\r\n                return <TimeSeriesPaper closePaper={(id)=>{this.closePaper(id)}} title={el.name} description={el.description} id={el.id}/>\r\n            }\r\n        })\r\n        return el_list\r\n    }\r\n\r\n    returnLayersPapers=()=>{\r\n        var layers = this.props.layers\r\n        if (layers!=undefined && layers!=null){\r\n            Object.keys(layers).forEach((type=>{           \r\n                    for (var m in layers[type]){\r\n                        var main_info=layers[type][m]\r\n                        if (main_info!=null && main_info!=undefined){\r\n                            var id=main_info.id\r\n                            var flag = this.state.papersList.includes({'id': id, 'name': main_info.name, 'description': main_info.description, 'value': false})\r\n                            if (flag==false){\r\n                                this.state.papersList.push({'id': id, 'name': main_info.name, 'description': main_info.description, 'value': false})\r\n                                this.setState(() => {return {firstLoad: true}})\r\n                            }\r\n                        }\r\n                    }\r\n            }))\r\n        }\r\n    }\r\n\r\n    showPaper=(id)=>{\r\n        this.state.papersList.forEach((el)=>{\r\n            if (el.id==id){\r\n                el.value=true\r\n            }\r\n        })\r\n        this.setState(() => {return {papersList: this.state.papersList}})\r\n    }\r\n\r\n    closePaper=(id)=>{\r\n        this.state.papersList.forEach((el)=>{\r\n            if (el.id==id){\r\n                el.value=false\r\n            }\r\n        })\r\n        this.setState(() => {return {papersList: this.state.papersList}})\r\n    }\r\n\r\n    returnMarkers=()=>{        \r\n        var markers = []\r\n        var active_layers = this.props.active_layers\t\t\r\n        var layers = this.props.layers\r\n        Object.keys(active_layers).forEach((type)=>{\r\n            if (active_layers[type]==true){\r\n                for (var t in station_layers){\r\n                    if (station_layers[t].type_name==type){\r\n                        var custom_icon=station_layers[t].type_icon\r\n                    }\r\n                }\r\n                layers[type].forEach((main_info)=>{\r\n                    var coordinates=[main_info.geometry.coordinates[0][1], main_info.geometry.coordinates[0][0]]\r\n                    if (main_info!=null && main_info!=undefined){\r\n                        var one_marker= (<Marker icon={custom_icon} position={coordinates}>\r\n                                            <Tooltip direction=\"right\">\r\n                                                <span>{main_info.name}</span>\r\n                                            </Tooltip>\r\n                                            <Popup >\r\n                                                <span><b>{main_info.name}</b></span>\r\n                                                <br/>                                                \r\n                                                <Divider />\r\n                                                <br/>\r\n                                                {main_info.description}                                                \r\n                                                <div style={{width: '100%', justifyContent:'center', textAlign:'center'}}>\r\n                                                    <br/>\r\n                                                    <Button size=\"small\" variant=\"contained\" color=\"inherit\" onClick={()=>this.showPaper(main_info.id)}>\r\n                                                    Показать временные ряды            \r\n                                                    </Button>\r\n                                                </div>\r\n                                            </Popup>\r\n                                        </Marker>)\r\n                        markers.push(one_marker)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        return markers\r\n    }\r\n\r\n    render(){\r\n        if (this.state.firstLoad==false){\r\n            this.returnLayersPapers();         \r\n        }\r\n    return(\r\n            <div >\r\n                <MapContainer style={{height: '93vh', width: '100%', margin:'0',  display: 'block', zIndex: 0, position: 'absolute'}}  center={[60.24077, 29.81952]} zoom={14}>\r\n                    <TileLayer\r\n                    attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors' url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    />\r\n                {this.returnMarkers()}\r\n                </MapContainer>  \r\n                {this.returnTimeSeriesPaper()}\r\n            </div>\r\n        )\r\n    }\r\n    }\r\nexport default LamminSuoMap;","C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\Header.js",["113","114","115"],"C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\LeftPanel.js",[],"C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\SwampCards.js",["116"],"C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\data\\stations.js",[],"C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\data\\station_layers.js",[],"C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\TimeSeriesPaper.js",[],"C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\server_settings.js",[],"C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\LayersCheckbox.js",[],"C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\palette.js",["117","118"],"var colors={'dark': '#091720',\r\n            'blue2': '#002f7d',\r\n            'blue3': '#019ed3',\r\n            'light': '#e9ddc7'}\r\n\r\nvar rgba_colors={'dark': 'rgba(9, 23, 32, 0.5)',\r\n                 'blue2': 'rgba(0, 47, 125, 0.5)',\r\n                 'blue3': 'rgba(1, 158, 211, 0.5)',\r\n                 'light': 'rgba(233, 221, 199, 0.5)'}","C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\data\\type_icons.js",[],"C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\data\\daily.js",[],"C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\TimeSeriesChart.js",[],"C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\DevelopingCard.js",["119"],"C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\AboutPage.js",[],"C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\ArchivePage.js",[],"C:\\Users\\Platanthera\\Desktop\\experimental_catchments\\src\\DocumentationPage.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":32,"column":39,"nodeType":"126","messageId":"127","endLine":32,"endColumn":41},{"ruleId":"124","severity":1,"message":"125","line":43,"column":30,"nodeType":"126","messageId":"127","endLine":43,"endColumn":32},{"ruleId":"128","severity":1,"message":"129","line":21,"column":53,"nodeType":"130","messageId":"131","endLine":21,"endColumn":55},{"ruleId":"124","severity":1,"message":"125","line":22,"column":25,"nodeType":"126","messageId":"127","endLine":22,"endColumn":27},{"ruleId":"124","severity":1,"message":"132","line":31,"column":19,"nodeType":"126","messageId":"127","endLine":31,"endColumn":21},{"ruleId":"124","severity":1,"message":"132","line":35,"column":57,"nodeType":"126","messageId":"127","endLine":35,"endColumn":59},{"ruleId":"124","severity":1,"message":"125","line":38,"column":37,"nodeType":"126","messageId":"127","endLine":38,"endColumn":39},{"ruleId":"124","severity":1,"message":"125","line":50,"column":22,"nodeType":"126","messageId":"127","endLine":50,"endColumn":24},{"ruleId":"124","severity":1,"message":"125","line":59,"column":22,"nodeType":"126","messageId":"127","endLine":59,"endColumn":24},{"ruleId":"124","severity":1,"message":"125","line":71,"column":36,"nodeType":"126","messageId":"127","endLine":71,"endColumn":38},{"ruleId":"124","severity":1,"message":"125","line":73,"column":52,"nodeType":"126","messageId":"127","endLine":73,"endColumn":54},{"ruleId":"124","severity":1,"message":"132","line":79,"column":53,"nodeType":"126","messageId":"127","endLine":79,"endColumn":55},{"ruleId":"124","severity":1,"message":"125","line":107,"column":33,"nodeType":"126","messageId":"127","endLine":107,"endColumn":35},{"ruleId":"133","severity":1,"message":"134","line":1,"column":16,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"125","line":22,"column":14,"nodeType":"126","messageId":"127","endLine":22,"endColumn":16},{"ruleId":"124","severity":1,"message":"125","line":25,"column":14,"nodeType":"126","messageId":"127","endLine":25,"endColumn":16},{"ruleId":"133","severity":1,"message":"134","line":1,"column":16,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"133","severity":1,"message":"137","line":1,"column":5,"nodeType":"135","messageId":"136","endLine":1,"endColumn":11},{"ruleId":"133","severity":1,"message":"138","line":6,"column":5,"nodeType":"135","messageId":"136","endLine":6,"endColumn":16},{"ruleId":"133","severity":1,"message":"134","line":1,"column":16,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '!==' and instead saw '!='.","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'colors' is assigned a value but never used.","'rgba_colors' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]